<?php  
ob_start();

// Importar dependências
require_once '../maquinaminisite/ConstantesMaquinaMinisiteFactory.php';
require_once '../maquinaminisite/MaquinaMinisiteFactory.php';
require_once '../sessao/ConstantesSessao.php';
require_once '../usuarios/UsuarioServiceImpl.php';
require_once '../sessao/SessaoServiceImpl.php';
require_once '../tags/TagsCommand.php';
require_once '../estatisticafuncao/ConstantesEstatisticaFuncao.php';
require_once '../estatisticafuncao/EstatisticaFuncaoServiceImpl.php';
require_once '../usuariosplanos/PlanoUsuarioServiceImpl.php';

include_once '../../inc/validarToken.php';

// Recupera dados do POST
$projeto = $_POST['target'];
$secao = $_POST['s20'];
// POST Fim

//array de teste e seus valores validos do frontend
//0
//ac-primeiro-paragrafo

// HARDCODE TESTES
/*
$projeto = 1; //FNO#1 
$token = 'c6f3b9466e5c21598248ebea744ec754deec9ed3';
$nicho = 'marketing-digital';
$lstsecao = array('ac-produto-bonus','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0');
$ssi = new SessaoServiceImpl();
$sessaodto = $ssi->obterRegistroDonoTokenSessao($token);
$usi = new UsuarioServiceImpl();
$usuariodto = $usi->pesquisarPorID($sessaodto->usuario);
$projetodto = $usi->buscarProjetoEspecifico($sessaodto->usuario, $projeto);
var_dump($projetodto);
$projetodto->lst_bonus = $usi->buscarTodosBonus($projetodto->id);
*/
// HARDCODE TESTES



//-- Obtem nicho em função do projeto fornecido -- PRODUCAO

$ssi = new SessaoServiceImpl();
$sessaodto = $ssi->obterRegistroDonoTokenSessao($token);
$usi = new UsuarioServiceImpl();
$usuariodto = $usi->pesquisarPorID($sessaodto->usuario);
$projetodto = $usi->buscarProjetoEspecifico($sessaodto->usuario, $projeto);
$projetodto->lst_bonus = $usi->buscarTodosBonus($projetodto->id);
$projetodto->lst_itens = $usi->buscarTodosItens($projetodto->id);
$projetodto->lst_dores = $usi->buscarTodasDores($projetodto->id);
$projetodto->lst_beneficios = $usi->buscarTodosBeneficios($projetodto->id);
$projetodto->lst_tecnicas = $usi->buscarTodasTecnicas($projetodto->id);


$nicho = $projetodto->nicho;

//var_dump($sessaodto);
//var_dump($projetodto);

// variavel de retorno do minisite
$retorno = "";

// Verifica qual elemento será processado
if ($secao !== '0') {
	switch ($secao) {
		case 'web20-palavra-chave-exata':
			$permissao = ConstantesPlano::PERM_WEB20_PALAVRA_CHAVE_EXATA;
			$factory = MaquinaMiniSiteFactory::getInstance(ConstantesMaquinaMiniSiteFactory::CONCRETE_WEB20_PALAVRA_CHAVE_EXATA, $nicho); 
			$factory->carregarTemplate();
			$retorno = $retorno.$factory->getPost();
			break;
		case 'pbn-palavra-chave-exata':
			$permissao = ConstantesPlano::PERM_PBN_PALAVRA_CHAVE_EXATA;
			$factory = MaquinaMiniSiteFactory::getInstance(ConstantesMaquinaMiniSiteFactory::CONCRETE_PBN_PALAVRA_CHAVE_EXATA, $nicho); 
			$factory->carregarTemplate();
			$retorno = $retorno.$factory->getPost();
			break;
		case 'web20-imagem-link':
			$permissao = ConstantesPlano::PERM_WEB20_IMAGEM_MAIS_LINK;
			$factory = MaquinaMiniSiteFactory::getInstance(ConstantesMaquinaMiniSiteFactory::CONCRETE_WEB20_IMAGEM_MAIS_LINK, $nicho); 
			$factory->carregarTemplate();
			$retorno = $retorno.$factory->getPost();
			break;
		case 'pbn-imagem-link':
			$permissao = ConstantesPlano::PERM_PBN_IMAGEM_MAIS_LINK;
			$factory = MaquinaMiniSiteFactory::getInstance(ConstantesMaquinaMiniSiteFactory::CONCRETE_PBN_IMAGEM_MAIS_LINK, $nicho); 
			$factory->carregarTemplate();
			$retorno = $retorno.$factory->getPost();
			break;
		case 'web20-simples':
			$permissao = ConstantesPlano::PERM_WEB20_ARTIGO_SIMPLES;
			$factory = MaquinaMiniSiteFactory::getInstance(ConstantesMaquinaMiniSiteFactory::CONCRETE_WEB20_ARTIGO_SIMPLES, $nicho); 
			$factory->carregarTemplate();
			$retorno = $retorno.$factory->getPost();
			break;
		case 'pbn-simples':
			$permissao = ConstantesPlano::PERM_PBN_ARTIGO_SIMPLES;
			$factory = MaquinaMiniSiteFactory::getInstance(ConstantesMaquinaMiniSiteFactory::CONCRETE_PBN_ARTIGO_SIMPLES, $nicho); 
			$factory->carregarTemplate();
			$retorno = $retorno.$factory->getPost();
			break;
		default:
			# code...
			break;
	}
}

// Verifica a permissão 
$pusi = new PlanoUsuarioServiceImpl();
$res = $pusi->verificarPermissaoPlano($sessaodto->usuario, $permissao);
Debugger::debug($res, Debugger::DEBUG);

// Retorno padrão da 
$seguefluxo = false;

if (
	($res->msgcode == ConstantesMensagem::PERMISSAO_CONCEDIDA_FACTORY) ||
	($res->msgcode == ConstantesMensagem::COMANDO_REALIZADO_COM_SUCESSO)
) {
	$seguefluxo = true;
}

// Troca tags 
$o = New TagsCommand($usuariodto, $projetodto, $retorno);
$retorno = $o->getConteudo();

//************* Codigo padrão para registro de estatisticas **********
// Preenche campos mutaveis da estatistica. Verifica se tem registro de estatistica
$tipoef = ConstantesEstatisticaFuncao::FUNCAO_WEB20_PLVR_CHV_EXATA;
if ($secao !== '0') {
	switch ($secao) {
		case 'web20-palavra-chave-exata':
			$tipoef = ConstantesEstatisticaFuncao::FUNCAO_WEB20_PLVR_CHV_EXATA;
			break;
		case 'pbn-palavra-chave-exata':
			$tipoef = ConstantesEstatisticaFuncao::FUNCAO_PBN_PLVR_CHV_EXATA;
			break;
		case 'web20-imagem-link':
			$tipoef = ConstantesEstatisticaFuncao::FUNCAO_WEB20_IMAGEM_MAIS_LINK;
			break;
		case 'pbn-imagem-link':
			$tipoef = ConstantesEstatisticaFuncao::FUNCAO_PBN_IMAGEM_MAIS_LINK;
			break;
		case 'web20-simples':
			$tipoef = ConstantesEstatisticaFuncao::FUNCAO_WEB20_ARTIGO_SIMPLES;
			break;
		case 'pbn-simples':
			$tipoef = ConstantesEstatisticaFuncao::FUNCAO_PBN_ARTIGO_SIMPLES;
			break;
		default:
			# code...
			break;
	}
}

if ($seguefluxo){
	$projetoidif = $projetodto->id;

	include_once '../../inc/registrarEstatisticaFuncao.php';
	$efsi->incrementarQtdePorID($dtoef->id);	
} else {
	$retorno = '<h3>' . $res->msgcodeString . '</h3>';
}

//*******FIM  :: Codigo padrão para registro de estatisticas **********

// retorna o montado -- REMOVER COMENTARIO ABAIXO EM PRODUCAO
echo $retorno;

ob_flush();
?>